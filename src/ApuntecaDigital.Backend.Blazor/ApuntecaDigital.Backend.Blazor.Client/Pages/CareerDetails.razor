@using ApuntecaDigital.Backend.Blazor.Client.Services
@using ApuntecaDigital.Backend.Blazor.Client.Models
@page "/careerdetails/{CareerId:int}"
@inject CareerService CareerService

<h3>Career Details</h3>

@if (career == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid @ref="careersGrid" AllowAlternatingRows="false" AllowFiltering="true" AllowPaging="true" PageSize="5"
        AllowSorting="true" EditMode="@editMode" TItem="Career" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow"
        Sort="@Reset" Page="@Reset" Filter="@Reset" ColumnWidth="200px">
        <HeaderTemplate>
            <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle" Text="Add New Career" Click="@InsertRow"
                Disabled="@(editMode == DataGridEditMode.Single && careersToInsert.Count() > 0)" />
        </HeaderTemplate>
    </RadzenDataGrid>
}

@code {
    [Parameter]
    public int CareerId { get; set; }
    [Parameter]
    public Career? career { get; set; }
    RadzenDataGrid<Career>? careersGrid;
    DataGridEditMode editMode = DataGridEditMode.Single;
    List<Career> careersToInsert = new List<Career>();

    protected override async Task OnInitializedAsync()
    {
        if (career != null)
        {
            if (career.Id != 0)
            {
                career = await CareerService.GetCareerByIdAsync(career.Id);
            }
            else
            {
                career = new Career();
            }
        }

        if (CareerId != 0)
        {
            career = await CareerService.GetCareerByIdAsync(CareerId);
        }
    }

    async Task OnUpdateRow(Career career)
    {
        if (career != null)
        {
            career.Id = CareerId;
            await CareerService.UpdateCareerAsync(career);
        }
    }

    async Task OnCreateRow(Career career)
    {
        if (career != null)
        {
            career.Id = CareerId;
            await CareerService.CreateCareerAsync(career);
        }
    }

    void Reset()
    {
        careersGrid?.Reload();
    }
    async Task InsertRow()
    {
        if (careersGrid == null || !careersGrid.IsValid) return;

        if (editMode == DataGridEditMode.Single)
        {
            Reset();
        }

        var career = new Career();
        careersToInsert.Add(career);
        await careersGrid.InsertRow(career);
    }

}