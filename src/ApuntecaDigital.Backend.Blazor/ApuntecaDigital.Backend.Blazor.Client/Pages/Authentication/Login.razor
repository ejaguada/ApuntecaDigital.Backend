@page "/login"
@using ApuntecaDigital.Backend.Blazor.Client.Services
@using ApuntecaDigital.Backend.Blazor.Client.ViewModels
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<RadzenCard Style="max-width: 400px; margin: auto; margin-top: 50px;">
    <RadzenText TextStyle="TextStyle.H3" TagName="TagName.H3" Class="mb-4">Login</RadzenText>

    @* <RadzenTemplateForm TItem="LoginViewModel" Data="@loginModel" Submit="@HandleLogin"> *@
    @*     <RadzenStack Gap="1rem"> *@
    @*         <RadzenFormField Text="Username" Variant="Variant.Outlined"> *@
    @*             <RadzenTextBox @bind-Value="@loginModel.Username" Name="Username" /> *@
    @*             <RadzenRequiredValidator Component="Username" Text="Username is required" /> *@
    @*         </RadzenFormField> *@
    @* *@
    @*         <RadzenFormField Text="Password" Variant="Variant.Outlined"> *@
    @*             <RadzenPassword @bind-Value="@loginModel.Password" Name="Password" /> *@
    @*             <RadzenRequiredValidator Component="Password" Text="Password is required" /> *@
    @*         </RadzenFormField> *@
    @* *@
    @*         @if (!string.IsNullOrEmpty(errorMessage)) *@
    @*         { *@
    @*             <RadzenAlert AlertStyle="AlertStyle.Danger" ShowIcon="true"> *@
    @*                 @errorMessage *@
    @*             </RadzenAlert> *@
    @*         } *@
    @* *@
    @*         <RadzenButton ButtonType="ButtonType.Submit"  *@
    @*                      Text="Login"  *@
    @*                      ButtonStyle="ButtonStyle.Primary"  *@
    @*                      Disabled="@isLoading" *@
    @*                      Class="w-100" /> *@
    @*     </RadzenStack> *@
    @* </RadzenTemplateForm> *@
</RadzenCard>

@code {
    // private LoginViewModel loginModel = new();
    // private bool isLoading;
    // private string? errorMessage;

    // private async Task HandleLogin()
    // {
    //     try
    //     {
    //         isLoading = true;
    //         errorMessage = null;
    //
    //         var result = await AuthenticationService.LoginAsync(loginModel);
    //         if (result.Succeeded)
    //         {
    //             NavigationManager.NavigateTo("/");
    //         }
    //         else
    //         {
    //             errorMessage = result.Error ?? "Login failed. Please try again.";
    //         }
    //     }
    //     catch (Exception)
    //     {
    //         errorMessage = "An unexpected error occurred. Please try again.";
    //     }
    //     finally
    //     {
    //         isLoading = false;
    //     }
    // }
}